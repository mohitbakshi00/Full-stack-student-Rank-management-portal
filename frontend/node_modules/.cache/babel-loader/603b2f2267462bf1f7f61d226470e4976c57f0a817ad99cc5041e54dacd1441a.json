{"ast":null,"code":"var _jsxFileName = \"F:\\\\React_Complete\\\\react_facts\\\\src\\\\components\\\\menu.js\";\nimport React from 'react';\nimport { ListGroup } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Menu() {\n  let previousButton = null;\n  function changeColor(buttonId) {\n    let button = document.getElementById(buttonId);\n    let defaultButton = document.getElementById(\"myButton1\");\n    defaultButton.style.backgroundColor = \"white\";\n    if (buttonId === \"myButton1\") {\n      button.style.backgroundColor = \"rgb(0, 102, 255)\";\n    }\n    if (previousButton !== null) {\n      previousButton.style.backgroundColor = \"white\"; /* Revert the previous button color to blue */\n    }\n\n    button.style.backgroundColor = \"rgb(0, 102, 255)\"; /* Change the color of the current button to red */\n    previousButton = button;\n  }\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      id: \"myButton1\",\n      className: \"list-group-item list-group-item-action\",\n      tag: \"a\",\n      style: {\n        backgroundColor: \"rgb(0, 102, 255)\"\n      },\n      onClick: () => changeColor(\"myButton1\"),\n      to: \"/\",\n      action: true,\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      id: \"myButton2\",\n      className: \"list-group-item list-group-item-action\",\n      tag: \"a\",\n      onClick: () => changeColor(\"myButton2\"),\n      to: \"/add-course\",\n      action: true,\n      children: \"Add Course\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      id: \"myButton3\",\n      className: \"list-group-item list-group-item-action\",\n      tag: \"a\",\n      onClick: () => changeColor(\"myButton3\"),\n      to: \"/view-courses\",\n      action: true,\n      children: \"View Courses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      id: \"myButton4\",\n      className: \"list-group-item list-group-item-action\",\n      tag: \"a\",\n      onClick: () => changeColor(\"myButton4\"),\n      to: \"/about-us\",\n      action: true,\n      children: \"About Us\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      id: \"myButton5\",\n      className: \"list-group-item list-group-item-action\",\n      tag: \"a\",\n      onClick: () => changeColor(\"myButton5\"),\n      to: \"/contact-us\",\n      action: true,\n      children: \"Contact Us\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n_c = Menu;\nexport default Menu;\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["React","ListGroup","Link","jsxDEV","_jsxDEV","Menu","previousButton","changeColor","buttonId","button","document","getElementById","defaultButton","style","backgroundColor","children","id","className","tag","onClick","to","action","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/React_Complete/react_facts/src/components/menu.js"],"sourcesContent":["import React from 'react'\r\nimport { ListGroup } from 'reactstrap'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Menu(){\r\n  let previousButton = null;\r\n  function changeColor(buttonId) {\r\n    let button = document.getElementById(buttonId);\r\n    let defaultButton = document.getElementById(\"myButton1\");\r\n    defaultButton.style.backgroundColor = \"white\";\r\n    if(buttonId===\"myButton1\"){\r\n      button.style.backgroundColor = \"rgb(0, 102, 255)\";\r\n    }\r\n    if (previousButton !== null) {\r\n      previousButton.style.backgroundColor =\r\n        \"white\"; /* Revert the previous button color to blue */\r\n    }\r\n\r\n    button.style.backgroundColor =\r\n      \"rgb(0, 102, 255)\"; /* Change the color of the current button to red */\r\n    previousButton = button;\r\n  }\r\n  \r\n    return (\r\n      <ListGroup>\r\n        <Link\r\n          id=\"myButton1\"\r\n          className=\"list-group-item list-group-item-action\"\r\n          tag=\"a\"\r\n          style={{ backgroundColor: \"rgb(0, 102, 255)\" }}\r\n          onClick={() => changeColor(\"myButton1\")}\r\n          to=\"/\"\r\n          action\r\n        >\r\n          Home\r\n        </Link>\r\n        <Link\r\n          id=\"myButton2\"\r\n          className=\"list-group-item list-group-item-action\"\r\n          tag=\"a\"\r\n          onClick={() => changeColor(\"myButton2\")}\r\n          to=\"/add-course\"\r\n          action\r\n        >\r\n          Add Course\r\n        </Link>\r\n        <Link\r\n          id=\"myButton3\"\r\n          className=\"list-group-item list-group-item-action\"\r\n          tag=\"a\"\r\n          onClick={() => changeColor(\"myButton3\")}\r\n          to=\"/view-courses\"\r\n          action\r\n        >\r\n          View Courses\r\n        </Link>\r\n        <Link\r\n          id=\"myButton4\"\r\n          className=\"list-group-item list-group-item-action\"\r\n          tag=\"a\"\r\n          onClick={() => changeColor(\"myButton4\")}\r\n          to=\"/about-us\"\r\n          action\r\n        >\r\n          About Us\r\n        </Link>\r\n        <Link\r\n          id=\"myButton5\"\r\n          className=\"list-group-item list-group-item-action\"\r\n          tag=\"a\"\r\n          onClick={() => changeColor(\"myButton5\")}\r\n          to=\"/contact-us\"\r\n          action\r\n        >\r\n          Contact Us\r\n        </Link>\r\n      </ListGroup>\r\n    ); \r\n}\r\n\r\nexport default Menu;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}